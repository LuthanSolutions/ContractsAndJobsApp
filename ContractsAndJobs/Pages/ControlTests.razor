@page "/controltests"
@using ContractsAndJobs.Components
@using ContractsAndJobs.Services;

@inject IDialogService DialogService

<div class="container">
    <div class="row g-2">
        <div class="col p-2">
            <SfCard>
                <CardHeader Title="People"></CardHeader>
                <CardContent>
                    Select first and second person
                    <SfDropDownList TItem="string" TValue="string" DataSource="@dropdownItems" Placeholder="First person" FloatLabelType="FloatLabelType.Auto" ShowClearButton="true" />
                    <SfDropDownList TItem="string" TValue="string" DataSource="@dropdownItems" Placeholder="Second person" FloatLabelType="FloatLabelType.Auto" ShowClearButton="true" />
                </CardContent>
            </SfCard>
        </div>
        <div class="col p-2">
            <SfCard>
                <CardHeader Title="Date"></CardHeader>
                <CardContent>
                    <div class="pb-3">
                        Select Date
                    </div>
                    <SfCalendar TValue="DateTime" />
                </CardContent>
            </SfCard>
        </div>
        <div class="col p-2">
            <SfCard>
                <CardHeader Title="Countries & Regions"></CardHeader>
                <CardContent>
                    <CountriesAndRegions Countries="@Countries" Regions="@Regions"></CountriesAndRegions>
                </CardContent>
            </SfCard>
        </div>
    </div>
    <div class="row g-2">
        <div class="col p-2">
            <SfCard>
                <CardHeader Title="Dialogs"></CardHeader>
                <CardContent>
                    <div class="container">
                        <div class="row">
                            <div class="col-2 p-2">
                                <SfButton @onclick="@OnAlertClick">Alert</SfButton>
                            </div>
                            <div class="col-10 p-2">
                                <SfMessage Severity="MessageSeverity.Warning" Variant="MessageVariant.Text">Click to display an alert dialog</SfMessage>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-2 p-2">
                                <SfButton @onclick="@OnConfirmClick">Confirm</SfButton>
                            </div>
                            <div class="col-10 p-2">
                                <SfMessage Severity="MessageSeverity.Normal" Variant="MessageVariant.Outlined">Click to display a confirmation dialog</SfMessage>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-2 p-2">
                                <SfButton @onclick="@OnPromptClick">Prompt</SfButton>
                            </div>
                            <div class="col-10 p-2">
                                <SfMessage Severity="MessageSeverity.Success" Variant="MessageVariant.Filled">Click to display a prompt dialog</SfMessage>
                            </div>
                        </div>
                    </div>   
                </CardContent>
            </SfCard>
        </div>
        <div class="col p-2">
            <SfCard>
                <CardHeader Title="Title Text"></CardHeader>
                <CardContent>
                    Content Text
                </CardContent>
            </SfCard>
        </div>
    </div>
</div>

@code {
    private bool? confirmResult;
    private string? promptResult;

    private async Task OnAlertClick()
    {
        await DialogService.AlertAsync("Title", "This is an alert, it doesn't return anything.", "Thanks");
    }

    private async Task OnConfirmClick()
    {
        confirmResult = await DialogService.ConfirmAsync("Title", "Are you sure that you want to do this?", "Yes", "No");
    }

    private async Task OnPromptClick()
    {
        promptResult = await DialogService.PromptAsync("Title", "Enter some text", "Here it is", "No thanks");
    }

    private List<string> dropdownItems = new() { "Glen Wilkin", "Jana Statute", "Michael Mouse", "Minnie Mouse" };

    private List<Country> Countries = new()
    {
        new Country{Id = 1, Name = "UK"},
        new Country{Id = 2, Name = "USA"},
        new Country{Id = 3, Name = "Canada"}
    };

    private List<Region> Regions = new()
    {
        new Region{ Id = 1, CountryId = 1, Name = "Northumberland"},
        new Region{ Id = 2, CountryId = 1, Name = "Co Durham"},
        new Region{ Id = 3, CountryId = 1, Name = "Cumbria"},
        new Region{ Id = 4, CountryId = 2, Name = "California"},
        new Region{ Id = 5, CountryId = 2, Name = "New York"},
        new Region{ Id = 6, CountryId = 2, Name = "Texas"},
        new Region{ Id = 7, CountryId = 3, Name = "Manitoba"},
        new Region{ Id = 8, CountryId = 3, Name = "Quebec"},
        new Region{ Id = 9, CountryId = 3, Name = "Ontario"}
    };
}
